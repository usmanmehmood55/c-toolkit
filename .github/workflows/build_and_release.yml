name: Build and Release

on:
  push:
    branches:
      - main
      - pre_release

jobs:
  build:
    runs-on: ubuntu-latest
    if     : github.event.head_commit.author.email != 'github-actions[bot]@users.noreply.github.com'
    outputs: 
      isPrerelease: ${{ steps.set_prerelease.outputs.isPrerelease }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install vsce
        run : npm install -g vsce

      - name: Install dependencies
        run : npm install

      - name: Determine release type
        id  : set_prerelease
        run : |
          if [[ "${{ github.ref }}" == "refs/heads/pre_release" ]]; then
            echo "::set-output name=isPrerelease::true"
          else
            echo "::set-output name=isPrerelease::false"
          fi

      - name: Bump version
        run : |
          if [[ "${{ steps.set_prerelease.outputs.isPrerelease }}" == "true" ]]; then
            npm version minor -m "Pre-release version %s"
          else
            npm version major -m "Release version %s"
          fi

      - name: Push updated package.json
        run : |
          git config user.name "GitHub Action"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git push

      - name: Package Extension
        run : vsce package

      - name: Publish to Marketplace
        run : |
          if [[ "${{ steps.set_prerelease.outputs.isPrerelease }}" == "true" ]]; then
            vsce publish -p ${{ secrets.VSCE_PUBLISH_PAT }} --pre-release
          else
            vsce publish -p ${{ secrets.VSCE_PUBLISH_PAT }}
          fi

      - name: Get package information
        id  : package_info
        run : |
          echo "::set-output name=version::$(node -p "require('./package.json').version")"
          echo "::set-output name=name::$(node -p "require('./package.json').name")"
          echo "::set-output name=publisher::$(node -p "require('./package.json').publisher")"

      - name: Create Release
        id  : create_release
        uses: actions/create-release@v1
        with: 
          tag_name    : ${{ steps.package_info.outputs.version }}
          release_name: Release ${{ steps.package_info.outputs.version }}
          draft       : false
          prerelease  : ${{ steps.set_prerelease.outputs.isPrerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Upload Release Asset
        id  : upload-release-asset
        uses: actions/upload-release-asset@v1
        with: 
          upload_url        : ${{ steps.create_release.outputs.upload_url }}
          asset_path        : ./${{ steps.package_info.outputs.name }}-${{ steps.package_info.outputs.version }}.vsix
          asset_name        : ${{ steps.package_info.outputs.name }}-${{ steps.package_info.outputs.version }}.vsix
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}